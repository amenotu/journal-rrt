// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditForm renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalExampleCloseConfig
    currentDate="string"
    currentIndex={0}
    currentText="string"
    onEditEntry={[Function]}
    open={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "0",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Button
          as="button"
          onClick={[Function]}
        >
          Edit Entry
        </Button>,
        <Modal
          centered={true}
          closeOnDimmerClick={true}
          closeOnDocumentClick={false}
          dimmer={true}
          eventPool="Modal"
          onClose={[Function]}
          open={false}
        >
          <ModalHeader>
            Edit Your Entry
          </ModalHeader>
          <ModalContent>
            <p>
              Edit your entry below
            </p>
            <Form
              as="form"
              onSubmit={[Function]}
            >
              <FormGroup>
                <FormField
                  control={[Function]}
                  label="Date"
                  name="date"
                  onChange={[Function]}
                  placeholder="Enter the date here..."
                  required={true}
                  value="string"
                />
                <FormField
                  control={[Function]}
                  label="Entry"
                  name="text"
                  onChange={[Function]}
                  placeholder="Start typing your entry here..."
                  required={true}
                  value="string"
                />
              </FormGroup>
            </Form>
          </ModalContent>
          <ModalActions>
            <Button
              as="button"
              negative={true}
              onClick={[Function]}
            >
              Cancel
            </Button>
            <Button
              as="button"
              content="Submit"
              icon="checkmark"
              labelPosition="right"
              onClick={[Function]}
              positive={true}
            />
          </ModalActions>
        </Modal>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "button",
          "children": "Edit Entry",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Edit Entry",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "centered": true,
          "children": Array [
            <ModalHeader>
              Edit Your Entry
            </ModalHeader>,
            <ModalContent>
              <p>
                Edit your entry below
              </p>
              <Form
                as="form"
                onSubmit={[Function]}
              >
                <FormGroup>
                  <FormField
                    control={[Function]}
                    label="Date"
                    name="date"
                    onChange={[Function]}
                    placeholder="Enter the date here..."
                    required={true}
                    value="string"
                  />
                  <FormField
                    control={[Function]}
                    label="Entry"
                    name="text"
                    onChange={[Function]}
                    placeholder="Start typing your entry here..."
                    required={true}
                    value="string"
                  />
                </FormGroup>
              </Form>
            </ModalContent>,
            <ModalActions>
              <Button
                as="button"
                negative={true}
                onClick={[Function]}
              >
                Cancel
              </Button>
              <Button
                as="button"
                content="Submit"
                icon="checkmark"
                labelPosition="right"
                onClick={[Function]}
                positive={true}
              />
            </ModalActions>,
          ],
          "closeOnDimmerClick": true,
          "closeOnDocumentClick": false,
          "closeOnEscape": undefined,
          "dimmer": true,
          "eventPool": "Modal",
          "onClose": [Function],
          "open": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Edit Your Entry",
            },
            "ref": null,
            "rendered": "Edit Your Entry",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <p>
                  Edit your entry below
                </p>,
                <Form
                  as="form"
                  onSubmit={[Function]}
                >
                  <FormGroup>
                    <FormField
                      control={[Function]}
                      label="Date"
                      name="date"
                      onChange={[Function]}
                      placeholder="Enter the date here..."
                      required={true}
                      value="string"
                    />
                    <FormField
                      control={[Function]}
                      label="Entry"
                      name="text"
                      onChange={[Function]}
                      placeholder="Start typing your entry here..."
                      required={true}
                      value="string"
                    />
                  </FormGroup>
                </Form>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Edit your entry below",
                },
                "ref": null,
                "rendered": "Edit your entry below",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "form",
                  "children": <FormGroup>
                    <FormField
                      control={[Function]}
                      label="Date"
                      name="date"
                      onChange={[Function]}
                      placeholder="Enter the date here..."
                      required={true}
                      value="string"
                    />
                    <FormField
                      control={[Function]}
                      label="Entry"
                      name="text"
                      onChange={[Function]}
                      placeholder="Start typing your entry here..."
                      required={true}
                      value="string"
                    />
                  </FormGroup>,
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <FormField
                        control={[Function]}
                        label="Date"
                        name="date"
                        onChange={[Function]}
                        placeholder="Enter the date here..."
                        required={true}
                        value="string"
                      />,
                      <FormField
                        control={[Function]}
                        label="Entry"
                        name="text"
                        onChange={[Function]}
                        placeholder="Start typing your entry here..."
                        required={true}
                        value="string"
                      />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "control": [Function],
                        "label": "Date",
                        "name": "date",
                        "onChange": [Function],
                        "placeholder": "Enter the date here...",
                        "required": true,
                        "value": "string",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "control": [Function],
                        "label": "Entry",
                        "name": "text",
                        "onChange": [Function],
                        "placeholder": "Start typing your entry here...",
                        "required": true,
                        "value": "string",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  Cancel
                </Button>,
                <Button
                  as="button"
                  content="Submit"
                  icon="checkmark"
                  labelPosition="right"
                  onClick={[Function]}
                  positive={true}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Cancel",
                  "negative": true,
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "content": "Submit",
                  "icon": "checkmark",
                  "labelPosition": "right",
                  "onClick": [Function],
                  "positive": true,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "0",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Button
            as="button"
            onClick={[Function]}
          >
            Edit Entry
          </Button>,
          <Modal
            centered={true}
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={[Function]}
            open={false}
          >
            <ModalHeader>
              Edit Your Entry
            </ModalHeader>
            <ModalContent>
              <p>
                Edit your entry below
              </p>
              <Form
                as="form"
                onSubmit={[Function]}
              >
                <FormGroup>
                  <FormField
                    control={[Function]}
                    label="Date"
                    name="date"
                    onChange={[Function]}
                    placeholder="Enter the date here..."
                    required={true}
                    value="string"
                  />
                  <FormField
                    control={[Function]}
                    label="Entry"
                    name="text"
                    onChange={[Function]}
                    placeholder="Start typing your entry here..."
                    required={true}
                    value="string"
                  />
                </FormGroup>
              </Form>
            </ModalContent>
            <ModalActions>
              <Button
                as="button"
                negative={true}
                onClick={[Function]}
              >
                Cancel
              </Button>
              <Button
                as="button"
                content="Submit"
                icon="checkmark"
                labelPosition="right"
                onClick={[Function]}
                positive={true}
              />
            </ModalActions>
          </Modal>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Edit Entry",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Edit Entry",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "centered": true,
            "children": Array [
              <ModalHeader>
                Edit Your Entry
              </ModalHeader>,
              <ModalContent>
                <p>
                  Edit your entry below
                </p>
                <Form
                  as="form"
                  onSubmit={[Function]}
                >
                  <FormGroup>
                    <FormField
                      control={[Function]}
                      label="Date"
                      name="date"
                      onChange={[Function]}
                      placeholder="Enter the date here..."
                      required={true}
                      value="string"
                    />
                    <FormField
                      control={[Function]}
                      label="Entry"
                      name="text"
                      onChange={[Function]}
                      placeholder="Start typing your entry here..."
                      required={true}
                      value="string"
                    />
                  </FormGroup>
                </Form>
              </ModalContent>,
              <ModalActions>
                <Button
                  as="button"
                  negative={true}
                  onClick={[Function]}
                >
                  Cancel
                </Button>
                <Button
                  as="button"
                  content="Submit"
                  icon="checkmark"
                  labelPosition="right"
                  onClick={[Function]}
                  positive={true}
                />
              </ModalActions>,
            ],
            "closeOnDimmerClick": true,
            "closeOnDocumentClick": false,
            "closeOnEscape": undefined,
            "dimmer": true,
            "eventPool": "Modal",
            "onClose": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Edit Your Entry",
              },
              "ref": null,
              "rendered": "Edit Your Entry",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <p>
                    Edit your entry below
                  </p>,
                  <Form
                    as="form"
                    onSubmit={[Function]}
                  >
                    <FormGroup>
                      <FormField
                        control={[Function]}
                        label="Date"
                        name="date"
                        onChange={[Function]}
                        placeholder="Enter the date here..."
                        required={true}
                        value="string"
                      />
                      <FormField
                        control={[Function]}
                        label="Entry"
                        name="text"
                        onChange={[Function]}
                        placeholder="Start typing your entry here..."
                        required={true}
                        value="string"
                      />
                    </FormGroup>
                  </Form>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Edit your entry below",
                  },
                  "ref": null,
                  "rendered": "Edit your entry below",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "form",
                    "children": <FormGroup>
                      <FormField
                        control={[Function]}
                        label="Date"
                        name="date"
                        onChange={[Function]}
                        placeholder="Enter the date here..."
                        required={true}
                        value="string"
                      />
                      <FormField
                        control={[Function]}
                        label="Entry"
                        name="text"
                        onChange={[Function]}
                        placeholder="Start typing your entry here..."
                        required={true}
                        value="string"
                      />
                    </FormGroup>,
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <FormField
                          control={[Function]}
                          label="Date"
                          name="date"
                          onChange={[Function]}
                          placeholder="Enter the date here..."
                          required={true}
                          value="string"
                        />,
                        <FormField
                          control={[Function]}
                          label="Entry"
                          name="text"
                          onChange={[Function]}
                          placeholder="Start typing your entry here..."
                          required={true}
                          value="string"
                        />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "control": [Function],
                          "label": "Date",
                          "name": "date",
                          "onChange": [Function],
                          "placeholder": "Enter the date here...",
                          "required": true,
                          "value": "string",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "control": [Function],
                          "label": "Entry",
                          "name": "text",
                          "onChange": [Function],
                          "placeholder": "Start typing your entry here...",
                          "required": true,
                          "value": "string",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    as="button"
                    negative={true}
                    onClick={[Function]}
                  >
                    Cancel
                  </Button>,
                  <Button
                    as="button"
                    content="Submit"
                    icon="checkmark"
                    labelPosition="right"
                    onClick={[Function]}
                    positive={true}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Cancel",
                    "negative": true,
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "content": "Submit",
                    "icon": "checkmark",
                    "labelPosition": "right",
                    "onClick": [Function],
                    "positive": true,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
